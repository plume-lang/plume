native print<A>(x: A): int
native sub(x: int, y: int): int
native mul(x: int, y: int): int
native eq(x: int, y: int): bool
native add(x: int, y: int): int

type Option<A> =
  Some(A)
  None

x1: Option<int> = None()

show(x: Option<int>): int =>
  switch x 
    case Some(x2) => print(x2)
    case None() => print("None")

show(x1)