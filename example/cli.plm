require "std:string"

type Error<T> =
  Ok(T)
  Err(str)

extend<T> (this: Error<T>) with
  show(showHelper: (T) -> str): str =>
    switch this
      case Ok(t) => "Ok({t.showHelper()})"
      case Err(e) => "Err({e.show()})"

  map<B>(f: (T) -> B): Error<B> =>
    switch this
      case Ok(t) => Ok(f(t))
      case Err(e) => Err(e)

err: Error<str> = Ok("Hello, ")
x: Error<str> = err.map((s) => s + "world!")
println(x.show(show))
