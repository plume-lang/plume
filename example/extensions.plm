native "std:native" println(x: str): int

interface<A> show<A> {
  fn show(a: A): str
}

extend show<str> {
  fn show(a: str): str {
    return "eheh"
  }
}

extend<A> show<[A]> {
  fn show(a: [A]): str => switch a {
    case [] => "[]"
    case [x, ..xs] => xs.show()
  }
}

t = [["test"]].show()

println(t)