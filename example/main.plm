x: int = 5

require "example/indent.plm"

welcome(name: str) => print("tet" + 5.3, 4)

x: int = 5

switch x
  case 5 => 
    print("test") 

    print("test2")
    return 5
  case 6 => print("test2")
  case ? => print("test3")

add = (y: int) =>
  z: int = x + y + 45

welcome("Thomas")

factorial(n: int) =>
  if n == 0 then 
    return 0
  
  return n * factorial(n - 1)

require "example/modules/hello.plm"

@print(@bruh)


print(factorial(5)) // rest

@bruh = "test5"

@print("Thomas")
@print(@bruh)

test<A, B>(x: A): B => 
  return x

print(@bruh)

print(x.show())

// declare show<A>(x: A): str
// declare add<A>(x: A, y: A): A

extends (x: int)
  show(): str => x.to_string()

print(7.show())

// print<A extends (show, add)>(x: A): () =>
//   @print("test")