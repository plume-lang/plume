require "string"
require "std:classes"

native ("native", "js") "std:native" {
  char_to_string(x: char): str
  eq_char(x: char, y: char): bool
}

extend show<char> {
  fn show_prec(c: char, prec: int) => switch prec {
    case 0 => char_to_string(c)
    case _ => "'" + char_to_string(c) + "'"
  }
}

extend to_str<char> {
  fn to_str(self) => char_to_string(self)
}

extend equality<char> {
  fn (==) (c: char, d: char) => eq_char(c, d)
}

extend to_str<[char]> {
  fn to_str(c: [char]): str => c.map(char_to_string).join_str("")
}