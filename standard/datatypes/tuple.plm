type tuple<A, B> =
  tuple(A, B)

extend<A, B> (c: tuple<A, B>) with
  show(showA: (A) -> str, showB: (B) -> str): str => switch c 
    case tuple(x, y) => "(" + showA(x) + ", " + showB(y) + ")"
    case ? => "Should not happen"

  fst(): A => switch c
    case tuple(x, y) => x
  
  snd(): B => switch c
    case tuple(x, y) => y
