type bigint {}

native ("js", "native") "std:native" {
  add_big(x: int, y: int): int
  sub_big(x: int, y: int): int
  mul_big(x: int, y: int): int
  div_big(x: int, y: int): int
  mod_big(x: int, y: int): int
  int_to_big(x: float): int
  big_to_int(x: int): float
  eq_big(x: int, y: int): bool
  lt_big(x: int, y: int): bool
  create_big(x: str): bigint
}

extend numeric<bigint> {
  fn (+) (a, b) => add_big(a, b)
  fn (-) (a, b) => sub_big(a, b)
}